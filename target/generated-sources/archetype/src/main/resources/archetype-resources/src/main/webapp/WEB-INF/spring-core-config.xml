#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/jdbc
         http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
         http://www.springframework.org/schema/jee
         http://www.springframework.org/schema/jee/spring-jee.xsd
         http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
		 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


	<!-- Configurer that replaces ${symbol_dollar}{...} placeholders with values from a properties 
		file -->
	<!-- (in this case, JDBC-related settings for the dataSource definition 
		below) -->

	<context:property-placeholder location="classpath:application.properties"
		system-properties-mode="OVERRIDE" />

	<context:component-scan base-package="${package}" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${symbol_dollar}{datasource.driverClassName}" />
		<property name="url" value="${symbol_dollar}{database.url}" />
		<property name="username" value="${symbol_dollar}{database.user}" />
		<property name="password" value="${symbol_dollar}{database.password}" />
	</bean>

	<!-- enables scanning for @Transactional annotations -->
	<tx:annotation-driven />


	<!-- JPA EntityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
				p:database="${symbol_dollar}{jpa.database}" p:showSql="true"
				p:generateDdl="true" />
			<!-- the 'database' parameter refers to the database dialect being used. 
				By default, Hibernate will use a 'HSQL' dialect because 'jpa.database' has 
				been set to 'HSQL' inside file spring/data-access.properties -->
		</property>
		<!-- gDickens: BOTH Persistence Unit and Packages to Scan are NOT compatible, 
			persistenceUnit will win -->
		<property name="persistenceUnitName" value="pu" />
		<property name="packagesToScan" value="${package}.model" />
	</bean>

	<!-- Transaction manager for a single JPA EntityManagerFactory (alternative 
		to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory" />


	<!-- Post-processor to perform exception translation on @Repository classes 
		(from native exceptions such as JPA PersistenceExceptions to Spring's DataAccessException 
		hierarchy). -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<jpa:repositories base-package="${package}.dao" />


</beans>